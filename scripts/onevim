#!/bin/bash

##include head.sh
sourcelib "common"

# Defaults
CONFIGFILE="$CONFIGDIR/onevim.conf"
FILES=() # Cumulative list of files to edit/open

# ----------------------------------------------------------------------
# Variables and functions that can be redefined in the config file

VIM="/usr/bin/vim"
SERVERNAME="ONEVIM"

# Call Vim
vim() {
    "$VIM" "$@"
}

# Check if Vim is started
isvimstarted() {
    vim --serverlist | grep -q "^$SERVERNAME$"
}

# Start Vim server and open files
startvim() {
    vim --servername "$SERVERNAME" "${FILES[@]}"
}

# Open files when Vim server is already started
openfiles() {
    [ ${#FILES[@]} -gt 0 ] && vim --servername "$SERVERNAME" --remote-silent "${FILES[@]}"
}
# ----------------------------------------------------------------------

# Read configuration file
readconfig() {
    source "$CONFIGFILE" || die RC "$CONFIGFILE"
}

# Add a single file to the cumulative list
addfile() {
    FILES+=("$1")
}

# Add multiple files passed as arguments
addfiles() {
    for f; do 
        addfile "$f"
    done
}

# Add multiple files from list; leading and trailing whitespace is
# stripped, empty lines and lines beginning with # are ignored
addlist() {
    local list="$1" f
    while read -r f || [ -n "$f" ]; do
        case "$f" in
            ""|"#"*)
                continue;;
        esac
        addfile "$f"
    done < <(cat "$list")
}

# Show a nice help message
showhelp() {
    cat <<"EOF"
onevim - edit files using only one Vim instance

Usage
    onevim [OPTION...] [FILE...]

Description
    This scripts starts or connects to an already started Vim server.

    Files for editing can be given on the command line, passed through
    stdin (one file per line), or read from a file (also one file per
    line). 

Options
    -c, --config FILE       Use alternate config file
    -l, --list FILE         Read files to edit from file

Examples
    onevim file.txt
    onevim *.php
    onevim -l mylist
    grep -r --include '*.php' -l 'function.*foo' | onevim
EOF
}

# Command line processing
TEMP=$(getopt \
        -l help,config:,list: \
        -o hc:l: \
        -- "$@") || die INVOPT
eval set -- "$TEMP"

while true; do
    case "$1" in
        -h|--help)
            showhelp
            exit 0;;
        -c|--config)
            [ -f "$2" ] || die NOTFILE "$2"
            CONFIGFILE="$2"
            shift 2;;
        -l|--list)
            if [ -f "$2" ]; then # Nonexistent files are just ignored
                addlist "$2"
            fi
            shift 2;;
        --)
            shift
            break;;
        -*)
            die UNPROCOPT;;
    esac
done

# Redirection or pipe?
if [ ! -t 0 ]; then
    addlist "-" # Add files from stdin
    exec </dev/tty # Reattach stdin to controlling terminal - fix for 'Input is not from a terminal'
fi

# Add files from command line
addfiles "$@"

# Read config file
[ -f "$CONFIGFILE" ] && readconfig 

# Open files
if isvimstarted; then
    openfiles
else
    startvim
fi

