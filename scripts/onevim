#!/bin/bash

##include head.sh
sourcelib "common"

# Defaults
CONSOLEVIM="/usr/bin/vim"
GUIVIM="/usr/bin/gvim"
[ -n "$DISPLAY" ] && VIM="$GUIVIM" || VIM="$CONSOLEVIM"
SERVERNAME="ONEVIM"
FILES=() # Cumulative list of files to edit

# Is the server started?
serverstarted() {
    $VIM --serverlist | grep -q "^$SERVERNAME$"
}

# Add a single file to the cumulative list
addfile() {
    FILES+=("$1")
}

# Add multiple files passed as arguments
addfiles() {
    for f; do 
        addfile "$f"
    done
}

# Add multiple files from list; leading and trailing whitespace is
# stripped, empty lines and lines beginning with # are ignored
addlist() {
    local list="$1" f
    while read -r f || [ -n "$f" ]; do
        case "$f" in
            ""|"#"*)
                continue;;
        esac
        addfile "$f"
    done < <(cat "$list")
}


# Show a nice help message
showhelp() {
    cat <<"EOF"
onevim - edit files using only one Vim instance

Usage
    onevim [OPTION...] [FILE...]

Options
    -l, --list FILE     Read files to edit from file
    -c, --console, --no-gui 
                        Force use of console version of Vim

Examples
    onevim file.txt
    onevim *.php
    onevim -l mylist
    grep -r --include '*.php' -l 'function.*foo' | onevim
EOF
}

# Command line processing
TEMP=$(getopt \
        -l help,list:,console,no-gui\
        -o hl:c \
        -- "$@") || errorexit INVOPT
eval set -- "$TEMP"

while true; do
    case "$1" in
        -h|--help)
            showhelp
            exit 0;;
        -l|--list)
            if [ -f "$2" ]; then # Nonexistent files are just ignored
                addlist "$2"
            fi
            shift 2;;
        -c|--console|--no-gui)
            VIM="$CONSOLEVIM"
            shift;;
        --)
            shift
            break;;
        -*)
            errorexit UNPROCOPT;;
    esac
done

# Redirection or pipe?
if [ ! -t 0 ]; then
    addlist "-" # Add files from stdin
    exec </dev/tty # Reattach stdin to controlling terminal - otherwise
                   # Vim could give warning that 'Input is not from a terminal'
fi

# Add files from command line
addfiles "$@"

# Here we go...
eval set -- "${FILES[@]}"
if [ -z "$1" ]; then
    if ! serverstarted; then
        $VIM --servername $SERVERNAME
    fi
else
    $VIM --servername $SERVERNAME --remote-silent "$@"
fi

