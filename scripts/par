#!/bin/bash

##include head.sh
sourcelib "common"

# Set some traps
trap "errorexit SIGTERM" TERM HUP
trap "errorexit SIGINT"  INT

# How many CPUs do we have?
cpucount() {
    grep -c '^processor\b' /proc/cpuinfo
}

# Defaults
MAXPROCS=$(cpucount)
MAXARGS=1
NICEADJ=0
VERBOSE=0
USESHELL=0

# Show a nice help message
showhelp() {
    cat <<"EOF"
par - wrapper around xargs for easy execution of parallel jobs

Usage
    par [OPTION...] [-- COMMAND [ARG...]]

Options
    -P, --max-procs NUM     Max number of processes to run in parallel
    -n, --max-args NUM      Max number of arguments per command
    -N, --nice NUM          Adjust niceness
    -v, --verbose           Print each executed command
    -s, --shell             Pass the command to bash - needed with pipes
                            and redirects

Examples
    ls *.wav | par -v -- oggenc -Q -q 3.5

    for f in *.wav; do
        echo "$f"
        echo "${f%.*}.mp3"
    done | par -v -n 2 -- lame --quiet --preset extreme

    for f in *.pbm; do
        echo "pnmtotiff -g4 '$f' > 'out/${f%.*}.tif'" 
    done | par -v -N 10 -P 4 -s
EOF
}

# Command line processing
TEMP=$(getopt \
        -l help,max-procs:,max-args:shell,verbose,nice: \
        -o hP:n:svN: \
        -- "$@") || errorexit INVOPT
eval set -- "$TEMP"

while true; do
    case "$1" in
        -h|--help)
            showhelp
            exit 0;;
        -P|--max-procs)
            ispsint "$2" || errorexit INVVAL "$2"
            MAXPROCS=$2
            shift 2;;
        -n|--max-args)
            ispsint "$2" || errorexit INVVAL "$2"
            MAXARGS=$2
            shift 2;;
        -N|--nice)
            isnnint "$2" || errorexit INVVAL "$2"
            NICEADJ=$2
            shift 2;;
        -v|--verbose)
            VERBOSE=1
            shift;;
        -s|--shell)
            USESHELL=1
            shift;;
        --)
            shift
            break;;
        -*)
            errorexit UNPROCOPT;;
    esac
done

# Main logic
XARGS="nice -n $NICEADJ xargs -d \n -n $MAXARGS -P $MAXPROCS"
[ $VERBOSE -ne 0 ] && XARGS+=" -t"

if [ $USESHELL -ne 0 ]; then
    $XARGS $SHELL -c
else
    $XARGS "$@"
fi
