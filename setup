#!/bin/bash

PROJECT="bash-scripts"
BASEDIR=$(cd "${BASH_SOURCE[0]%/*}" && pwd)
LIBDIR="$BASEDIR/lib/$PROJECT"
source "$LIBDIR/common.sh" || exit 9

PREFIX="$HOME/.local" # Install prefix
COMMAND="" # Command to execute

adderrormsgs \
    MISSCMD "missing command" \
    UNKNOWNCMD "unknown command %s" \
    INSTALL "cannot install %s"

# Name of function implementing command $1
cmdfunc() {
    echo "cmd_$1"
}

# Is $1 an implemented command
iscmd() {
    isfunction "$(cmdfunc "$1")"
}

# Do command $1
docmd() {
    (
    cd "$BASEDIR"
    $(cmdfunc "$1")
    )
}

# Log a message
log() {
    echo "$@"
}

# Create a directory or die
makedir() {
    mkdir -p "$1" 2>/dev/null || die MKDIR "$1"
}

cmd_install() {
    local bindir="$PREFIX/bin"
    local libdir="$PREFIX/lib/$PROJECT"
    local f d
    # Binaries
    makedir "$bindir"
    while read f; do
        log "$f --> $bindir/"
        install -m 755 "$f" "$bindir" || die INSTALL "$f"
    done < <(find bin -type f | sort)
    # Libraries
    while read f; do
        d=${f%/*}; d=${d#lib/$PROJECT}; d="$libdir$d"
        makedir "$d"
        log "$f --> $d/"
        install -m 644 "$f" "$d" || die INSTALL "$f"
    done < <(find lib -type f | sort)
}

cmd_list() {
    local f
    while read f; do 
        "$f" --help | head -n 1
    done < <(find bin -type f | sort)
}

showhelp() {
    cat <<"EOF"
setup - scripts setup/installation tool

Usage
    setup [OPTION...] COMMAND

Description
    Supported commands:

        install     install files
        list        list available scripts

Options
    -p, --prefix DIR        Set prefix (default is $HOME/.local)

Examples
    # Install to $HOME/.local
    ./setup install

    # Install to $HOME
    ./setup install --prefix=$HOME
EOF
}

TEMP=$(getopt \
        -l help,prefix: \
        -o p: \
        -- "$@") || die INVOPT
eval set -- "$TEMP"

while true; do
    case "$1" in
        -h|--help)
            showhelp
            exit 0;;
        -p|--prefix)
            PREFIX="$2"
            shift 2;;
        --)
            shift
            break;;
        -*)
            die UNPROCOPT;;
    esac
done

[ -z "$1" ] && die MISSCMD
iscmd "$1" || die UNKNOWNCMD "$1"
COMMAND="$1"
shift

if [ "$COMMAND" = "install" ]; then
    [ -z "$PREFIX" ] && die MISSOPT '--prefix'
fi

docmd "$COMMAND"

